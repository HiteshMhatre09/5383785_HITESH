#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct Stack {
    char** data;
    int top;
    int size;
} Stack;

Stack* createStack(int size) {
    Stack* s = malloc(sizeof(Stack));
    s->data = malloc(size * sizeof(char*));
    s->top = -1;
    s->size = size;
    return s;
}

void push(Stack* s, const char* str) {
    s->data[++s->top] = strdup(str);
}

char* pop(Stack* s) {
    if (s->top == -1) return NULL;
    char* res = s->data[s->top--];
    return res;
}

char* peek(Stack* s) {
    if (s->top == -1) return NULL;
    return s->data[s->top];
}

int main() {
    int Q;
    scanf("%d", &Q);
    char s[1000001] = "";
    Stack* undo = createStack(Q);

    for (int i = 0; i < Q; i++) {
        int op;
        scanf("%d", &op);
        if (op == 1) {
            char add[100001];
            scanf("%s", add);
            push(undo, s);
            strcat(s, add);
        } else if (op == 2) {
            int k;
            scanf("%d", &k);
            push(undo, s);
            s[strlen(s) - k] = '\0';
        } else if (op == 3) {
            int k;
            scanf("%d", &k);
            printf("%c\n", s[k - 1]);
        } else if (op == 4) {
            char* prev = pop(undo);
            if (prev) {
                strcpy(s, prev);
                free(prev);
            }
        }
    }

    while (undo->top >= 0) free(pop(undo));
    free(undo->data);
    free(undo);
    return 0;
}

